import Head from 'next/head';
import Banner from '../components/Banner';
import CardsHome from '../components/CardsHome';
import Testimonials from '../components/Testimonials';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import Slider from 'react-slick';
import SlickNextArrow from '../components/slick-arrow/SlickNextArrow';
import SlickPrevArrow from '../components/slick-arrow/SlickPrevArrow';
import Brands from '../components/Brands';
import Services from '../components/Services';
import Process from '../components/Process';
import Cta from '../components/Cta';
import { useEffect, useRef } from 'react';
import { Cursor } from '../components/Cursor';
import CursorBody from '../components/CursorBody';
import ScrollTrigger from 'gsap/dist/ScrollTrigger';
import { gsap } from 'gsap';
import Link from 'next/link';
import { sanityClient, urlFor } from '../sanity';
gsap.registerPlugin(ScrollTrigger);

export default function Home({ content }) {
  const data = content[0];
  const settings = {
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    nextArrow: <SlickNextArrow />,
    prevArrow: <SlickPrevArrow />,
  };

  const testimonials = useRef(null);

  useEffect(() => {
    if (window.innerWidth > 1024) {
      Cursor();
    }
    if (window.innerWidth < 768) {
      ScrollTrigger.config({
        autoRefreshEvents: 'DOMContentLoaded,load,visibilitychange',
      });
    }
    gsap.to('body main', {
      opacity: 1,
      duration: 0.5,
    });
    return () => {
      ScrollTrigger.getAll().forEach((instance) => {
        instance.kill();
      });
      document.body.style.background = 'white';
    };
  }, []);

  return (
    <div>
      <Head>
        <title>Baseline</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main>
        <div className='max-w-[1600px] mx-auto px-[30px] md:px-[50px] '>
          <Banner
            bannerHeading={data.bannerHeading}
            bannerSubHeading={data.bannerSubHeading}
          />
          <CardsHome
            excerpt={true}
            slug={data.cardsSlug}
            heading={data.cardsHeading}
            subHeading={data.cardsSubHeading}
            cardsUnderlinedWord={data.cardsUnderlinedHeadingWord}
            cards={data.cards}
            cardsCtaContent={data.cardsCtaContent}
            cardsCtaButton={data.cardsCtaButton}
          />
          <div
            className='testimonials translate-y-10 mb-[100px] md:mb-[220px] '
            ref={testimonials}
          >
            <Slider {...settings}>
              <Testimonials
                text={data.testimonials.testimonialContent[0].children[0].text}
                image={urlFor(data.testimonials.testimonialImage).url()}
                name={data.testimonials.testimonialName}
                org={data.testimonials.testimonialFirm}
              />
              <Testimonials
                text={data.testimonials.testimonialContent[0].children[0].text}
                image={urlFor(data.testimonials.testimonialImage).url()}
                name={data.testimonials.testimonialName}
                org={data.testimonials.testimonialFirm}
              />
            </Slider>
          </div>
        </div>
        <Brands
          testimonialRef={testimonials}
          brandsHeading={data.brandsHeading}
          brandsScrollText1={data.brandsScrollText1}
          brandsScrollText2={data.brandsScrollText2}
          brandsScrollText3={data.brandsScrollText3}
          delayedText={data.delayedText}
        />
        <div className='bg-white rounded-t-[40px]'>
          <Services />
          <div className='flex justify-around py-[35px] flex-col lg:flex-row items-center gap-y-[35px] lg:gap-y-0 px-[30px]'>
            <div className='flex items-center'>
              <div className='pr-[15px] mr-[15px] border-r border-r-[#0f0f0f]'>
                <h4 className='font-medium text-[24px]'>B2B</h4>
              </div>
              <div>
                <p>{data.b2bText.b2bText}</p>
                <Link href='/contact'>
                  <a className='text-[#367F61] header-links before:bg-[#367F61]'>
                    {data.b2bText.b2bLinkText}
                  </a>
                </Link>
              </div>
            </div>
            <div className='flex items-center'>
              <div className='pr-[15px] mr-[15px] border-r border-r-[#0f0f0f]'>
                <h4 className='font-medium text-[24px]'>B2C</h4>
              </div>
              <div>
                <p>{data.b2cText.b2cText}</p>
                <Link href='/contact'>
                  <a className='text-[#367F61] header-links before:bg-[#367F61]'>
                    {data.b2cText.b2cLinkText}
                  </a>
                </Link>
              </div>
            </div>
          </div>
        </div>
        <Process
          processText1={data.processText1}
          processText2={data.processText2}
          processText3={data.processText3}
          processText4={data.processText4}
        />
        <Cta
          footerHeading={data.footerHeading}
          footerSubHeading={data.footerSubHeading}
          footerButton={data.footerButton}
        />
      </main>
      <CursorBody />
    </div>
  );
}

export const getServerSideProps = async () => {
  const query = `
  *[_type == "HomePage"]{
    bannerHeading,
    bannerSubHeading,
    cardsSlug,
    cardsHeading,
    cardsSubHeading,
    cardsUnderlinedHeadingWord,
    cards,
    cardsCtaContent,
    cardsCtaButton,
    testimonials,
    brandsHeading,
    brandsScrollText1,
    brandsScrollText2,
    brandsScrollText3,
    delayedText,
    b2bText,
    b2cText,
    processText1,
    processText2,
    processText3,
    processText4,
    footerHeading,
    footerSubHeading,
    footerButton
  }
  
  `;

  const content = await sanityClient.fetch(query);

  return {
    props: {
      content,
    },
  };
};
